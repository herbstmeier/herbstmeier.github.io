@page "/projects/portfolio"
@using System.Globalization
@inject IStringLocalizer<Projects> Loc

<div class="heading-container">
    <h1 class="highlight ltext">portfolio website</h1>
</div>

<div class="link-container">
    <a class="hover-box github" href="https://github.com/herbstmeier/herbstmeier.github.io" target="_blank"><img
            class="icon" src="img/icons/github.svg" alt=""></a>
</div>

@if (CultureInfo.CurrentCulture.TwoLetterISOLanguageName == "en")
{
    <p>
        with this website i had several goals in mind. the main purpose is to present my skills in a practical way as i am
        no natural at self advertising. similarly, i wanted to make it easier for potential employers to see what experience
        i offer. and last but not least it gave me the opportunity to learn a new web development framework as the project
        wasn't going to be very complex.
    </p>

    <h2>the framework</h2>
    <p>
        up until this point i had only worked with angular. i enjoy coding in typescript and both the easy scss/sass
        integration and the html directives are a definite plus. the obvious choice for the next framework to learn would
        have been react. it is very popular among the web development community and supposedly has a manageable learning
        curve. however i had recently heard about blazor and the thought of coding for the web in C# caught my interest. i
        ended up using blazor webassembly over the server equivalent as i prefered its simplicity.
    </p>
    <p>
        looking back on the learning journey it was tricky at points because of the big differences between blazor and
        javascript frameworks. also the developer community isn't nearly as large as with angular for example. however, i've
        found using blazor to be very enjoyable. i like having both the html markup and C# code in file as it cleans up the
        file explorer. also the directives used for connecting the two are quite intuitive, moreso than in angular in my
        opinion. learning blazor has definitely increased my general understanding of web development as i now see different
        paths to get to the same goal. i look forward to using it more in the future. hopefully in the next project i get to
        explore database integration with entity framework and the general approach to backend functionality.
    </p>

    <h2>the style</h2>
    <p>
        i am not a designer. just wanted to make that clear ^^. all choices i made in regards to style were purely based on
        my own taste and intuition.
    </p>
    <p>
        this portfolio is meant to represent my abilities, interests and personality. therefore it was important to me to
        complement the page content with a visual look and feel that doesn't distract, but adds further context. it had to
        be simplistic and easy to engage with while retaining that personal touch. to accomplish this i found it critical to
        choose a fitting font and use clear edges. i quite like the look of the slightly warped rectangles i use to
        highlight text as they keep things simple but add some spice. color wise i personally enjoy soft colors a lot. i
        suppose you could say
        it represents the vibe i give off as i tend to be soft spoken, but let's not delve too deep into the psychology
        behind these things. overall i found it very rewarding to go from the blank canvas to this finished website.
    </p>
}
else
{
    <p>
        ich hatte mehrere ziele für diese website. das hauptziel ist es, meine fähigkeiten in einem format zu präsentieren,
        da ich kein naturtalent darin bin, werbung für mich selbst zu machen. im selben zuge wollte ich es für potentielle
        arbeitgeber leichter machen, zu sehen, welche kompetenzen ich biete. zuletzt hatte ich durch das portfolio die
        möglichkeit, ein neues web-entwicklungs-framework zu lernen, da das projekt nicht allzu komplex ist.
    </p>

    <h2>das framework</h2>
    <p>
        vor diesem projekt hatte ich nur mit angular gearbeitet. in typescript zu coden macht mir spaß und die leichte
        integration von scss bzw. sass, sowie die html-direktiven sind ein klares plus. die offensichtliche wahl für das
        nächste framework wäre reactjs gewesen. es ist sehr beliebt in der web-entwickler-gemeinschaft und hat anscheinend
        eine überschaubare lernkurve. um diese zeit hatte ich jedoch von blazor gehört und fand den gedanken, in C# für das
        web zu coden spannend. ich habe mich im endeffekt für blazor webassembly entschieden. dieses erschien mir simpler
        als die blazor server variante.
    </p>
    <p>
        rückblickend war die lernphase aufgrund der großen unterschiede zwischen blazor und javascript-frameworks teilweise
        knifflig. außerdem ist die entwickler-gemeinschaft bei weitem nicht so groß wie zum beispiel bei angular. blazor zu
        verwenden fand ich jedoch sehr erfreulich. es ist schön das html-markup und den C# code in der selben datei zu
        haben, da der datei-explorer deutlich aufgeräumter aussieht. auch die direktiven mit denen beides verbunden wird
        sind durchaus intuitiv - meiner ansicht nach mehr als bei angular. blazor zu lernen hat definitiv mein generelles
        verständnis für die web-entwicklung verbessert, weil ich jetzt mehrere wege kenne, um das selbe ziel zu erreichen.
        ich freue mich schon auf das nächste blazor-projekt. hoffentlich kann ich dabei datenbank-integration mit
        entity-framework sowie die generelle backend-herangehensweise erkunden.
    </p>

    <h2>der style</h2>
    <p>
        ich möchte vorerst erwähnen, dass ich kein designer bin ^^. alle stilistischen entscheidungen habe ich schlichtweg
        auf meinem persönlichen geschmack und meiner intuition basiert.
    </p>
    <p>
        dieses portfolio soll meine fähigkeiten, interessen und meine persönlichkeit präsentieren. darum war es mir wichtig,
        den inhalt mit einem aussehen zu untermalen, das nicht ablenkt, sondern dem ganzen mehr kontext beifügt. es musste
        simplistisch sein und es leicht machen, damit zu interagieren, während eine persönliche note erkennbar ist. um dies
        umzusetzen, fand ich es entscheidend, eine
        passende schriftart zu verwenden und deutliche kanten zu verwenden. ich finde die leicht krummen rechtecke sehr
        passend, weil es eine simple form ist, die trotzdem etwas schwung hinzugibt. persönlich mag ich weiche farben sehr
        gerne. man könnte bestimmt sagen, dass sie meine atmosphäre widerspiegeln, weil ich meist eher ruhig agiere, aber
        ich möchte gar nicht zu viel hinein interpretieren. im großen und ganzen fand ich es sehr belohnend, die website
        stück für stück zu entwerfen.
    </p>
}

