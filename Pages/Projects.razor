@page "/projects"
@page "/projects/{tagId:int}"
@inject IStringLocalizer<Projects> Loc

<PageTitle>moritz herbstmeier | @Loc["title"]</PageTitle>

<div class="heading-container">
    <h1 class="highlight ltext">@Loc["title"]</h1>
</div>

<div class="sort-container">
    <p class="stext">@Loc["sort"]</p>
    <ul class="tags">
        @foreach (var tag in tags)
        {
            <li class="stext highlight hover-box @(selectedTags.Contains(tag) ? "" : "sleep")" @onclick="() => toggleTag(tag)">@tag
            </li>
        }
    </ul>

</div>

<div class="project-container">
    @foreach (var project in visibleProjects)
    {
        <ProjectCard project="@project" OnTagSelected="toggleTag"></ProjectCard>
    }
</div>

@code {
    [Parameter]
    public int? tagId { get; set; }
    private List<Project> projects = new List<Project>();
    private List<Project> visibleProjects = new List<Project>();
    private List<String> tags = new List<String>();
    private List<String> selectedTags = new List<String>();

    protected override void OnInitialized()
    {
        projects = ProjectData.GetProjects();
        tags = Project.ExtractTags(projects);

        visibleProjects = new List<Project>();
        visibleProjects = projects;

        if (tagId.HasValue)
        {
            int id = tagId ?? default(int);
            toggleTag(tags[id]);
        }
    }

    public void toggleTag(string tag)
    {
        if (selectedTags.Contains(tag))
        {
            selectedTags.Remove(tag);
        }
        else
        {
            selectedTags.Insert(0, tag);
        }
        visibleProjects = Project.SortByTags(projects, selectedTags);
    }
}
