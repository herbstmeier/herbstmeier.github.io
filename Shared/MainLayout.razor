@inherits LayoutComponentBase
@using System.Globalization
@inject IStringLocalizer<MainLayout> Loc
@inject NavigationManager NavManager

<div class="page">
    <main>
        <div hidden="@(!hamburgerActive)" class="phone-menu-container">
            @for (int i = 0; i < 4; i++)
            {
                int j = i; //help iterator
                <a class="@((selectedPage==j) ? "active" : "")" @onclick="() => setSelectedPage(j)"
                href="@paths[j]">@Loc[paths[j]]</a>
            }
        </div>

        <div class="top-row @(hamburgerActive ? "active" : "")">
            <div class="hamburger-container" @onclick="toggleHamburger">
                <div></div>
                <div class="middle"></div>
                <div class="bottom"></div>
            </div>
            @for (int i = 0; i < 4; i++)
            {
                int j = i; //help iterator
                <a class="@((selectedPage==j) ? "active" : "")" @onclick="() => setSelectedPage(j)"
                href="@paths[j]">@Loc[paths[j]]</a>
            }
            <CultureSelector />
        </div>

        <article class="content">
            <div class="heading-container">
                @if (selectedPage == 0)
                {
                    <h1>moritz</h1>
                    <h1 class="last-name highlight">herbstmeier</h1>
                }
                else
                {
                    <h1 class="highlight">@title</h1>
                }

            </div>
            <div class="body-container">
                @Body
            </div>
        </article>
    </main>
</div>
@code {
    private int selectedPage = 0;
    private bool hamburgerActive = false;
    private string? title;
    private string? currentUrl;
    private string[] paths = new[]
    {
"home",
"about",
"projects",
"resume"
};

    protected override void OnInitialized()
    {
        currentUrl = NavManager.ToBaseRelativePath(NavManager.Uri);
        switch (currentUrl)
        {
            case "home":
                selectedPage = 0;
                break;
            case "about":
                selectedPage = 1;
                break;
            case "projects":
                selectedPage = 2;
                break;
            case "resume":
                selectedPage = 3;
                break;
        }

        title = Loc[paths[selectedPage]];
    }



    public void setSelectedPage(int page)
    {
        selectedPage = page;
        title = Loc[paths[selectedPage]];
    }

    private void toggleHamburger()
    {
        hamburgerActive = !hamburgerActive;
    }
}
